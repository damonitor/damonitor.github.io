<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>damo on DAMON Project</title>
    <link>https://damonitor.github.io/tags/damo/</link>
    <description>Recent content in damo on DAMON Project</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Jun 2025 11:44:52 -0700</lastBuildDate><atom:link href="https://damonitor.github.io/tags/damo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>`damo report heatmap` modernization for snapshots, page level monitoring and intervals auto-tuning</title>
      <link>https://damonitor.github.io/posts/damo_heatmap_modernization_2025_06/</link>
      <pubDate>Sun, 08 Jun 2025 11:44:52 -0700</pubDate>
      
      <guid>https://damonitor.github.io/posts/damo_heatmap_modernization_2025_06/</guid>
      
      <description>TL; DR: damo report heatmap has recently advanced to support modern DAMON features including age tracking, snapshots, page level monitoring, and moniting intervals auto-tuning.
DAMON in The Past: Full Recording based Monitoring At the beginning, DAMON was providing only access frequency of each memory region in real time. Hence heatmap visualization, which shows the access frequency of each memory area in timeline was the first and one of the best ways to see the access pattern.</description>
      
    </item>
    
    <item>
      <title>Why the heatmap is not showing the expected access patterns?</title>
      <link>https://damonitor.github.io/posts/why_the_heatmap_is_not_showing_the_expected_access_patterns/</link>
      <pubDate>Sun, 16 Mar 2025 10:19:49 -0700</pubDate>
      
      <guid>https://damonitor.github.io/posts/why_the_heatmap_is_not_showing_the_expected_access_patterns/</guid>
      
      <description>TL; DR: try --draw_range all option of damo report heatmap if it shows not what you expected.
damo report heatmap outputs sometimes show no expected access pattern. It is sometimes just entirely black, or shows some access pattern but not what the user expected. This post is for explaining the reason and how you can work around.
The problem usually happens when user tries to draw the heatmap for access pattern that recorded for a virtual address space of a process.</description>
      
    </item>
    
    <item>
      <title>Upcoming feature: Page level peroperties based access monitoring</title>
      <link>https://damonitor.github.io/posts/damon_sz_filter_passed/</link>
      <pubDate>Mon, 23 Dec 2024 11:10:19 -0800</pubDate>
      
      <guid>https://damonitor.github.io/posts/damon_sz_filter_passed/</guid>
      
      <description>We&amp;rsquo;re working on making DAMON to be used for page level properties based access monitoring. The idea is to let users describe specific page level properties that are interested in, and provides the size of the type of memory in each regions that DAMON found unique access pattern.
Hence, users can know how much of memory of specific access temperature is having the type. For example, you can know how much of memory that not accessed for more than 20 minutes are having how much file-backed pages of a cgroup.</description>
      
    </item>
    
    <item>
      <title>damo v2.5.7 new features: temperature filtering and formatting</title>
      <link>https://damonitor.github.io/posts/damo_2_5_7_features/</link>
      <pubDate>Mon, 25 Nov 2024 21:12:13 -0800</pubDate>
      
      <guid>https://damonitor.github.io/posts/damo_2_5_7_features/</guid>
      
      <description>damo v2.5.7 is released on 2024-11-25. Two new major features on this version are temperature-based regions filtering and formatting.
Temperature &amp;ldquo;Temperature&amp;rdquo; of each memory region represents relative access hotness of the region. It is calculated as weighted sum of size, access rate (a.k.a nr_accesses) and age of each region. By default, the weights for the three properties are 0, 100, and 100. Users can manually set it using --temperature_weights option.</description>
      
    </item>
    
    <item>
      <title>Auto-tuning DAMOS using `damo`</title>
      <link>https://damonitor.github.io/posts/damo_autotune_example/</link>
      <pubDate>Sun, 03 Nov 2024 13:15:24 -0800</pubDate>
      
      <guid>https://damonitor.github.io/posts/damo_autotune_example/</guid>
      
      <description>Starting from Linux v6.9, DAMON provides DAMOS quota auto-tuning. It allows users to set a target metric and value. Then, DAMOS will adjust its aggressiveness (effective quota) to achieve the target.
damo users can also use the feature using --damos_quota_goal option. But apparently the usage is not well documented. Maybe it should be documented somewhere on USAGE.md of damo, but I cannot find a good splot for now. So I&amp;rsquo;m explaining the usage in more informal way on this post.</description>
      
    </item>
    
    <item>
      <title>Creating DAMON logo using DAMON</title>
      <link>https://damonitor.github.io/posts/damon_heatmap_logo/</link>
      <pubDate>Sat, 13 Jul 2024 13:56:02 -0700</pubDate>
      
      <guid>https://damonitor.github.io/posts/damon_heatmap_logo/</guid>
      
      <description>I just made a DAMON logo using DAMON, like below.
$ git clone https://github.com/sjp38/masim &amp;amp;&amp;amp; cd masim $ cat damon_pixel_2 11111111 11 11 111111 11111111 11 11 11111111 11111111 1111 11111111 11111111 11 11 11111111 11111111 1111 11111111 $ ./pixels_to_access_config.py ./damon_pixel_2 $((100*1024*1024)) 300 damon.cfg $ sudo damo record &amp;#34;./masim ./configs/stairs.cfg&amp;#34; $ sudo damo report heatmap --output damon.png The output is below:
The cropped one:</description>
      
    </item>
    
  </channel>
</rss>
